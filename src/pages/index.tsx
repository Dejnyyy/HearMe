import React from "react";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import HamburgerMenu from "./components/HamburgerMenu";
import { User } from "@prisma/client";
import Image from "next/image";

const Home: React.FC<{ userList: User[] }> = () => {
  const { data: sessionData } = useSession();
  const userID = sessionData?.user?.id;

  return (
    <>
      <Head>
        <title>HearMe</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main
        className="flex min-h-screen flex-col items-center justify-center"
        style={{
          background: 'url("/cssBackground4.png")',
          backgroundSize: "cover",
          backgroundPosition: "center",
        }}
      >
        <Image
          src="/favicon.png"
          className="top-40 m-2 w-64"
          alt="Logo"
          width={200}
          height={200}
        />
        {sessionData && <HamburgerMenu />}
        {sessionData && (
          <div className="font-mono text-lg font-semibold text-white">
            Hello,{" "}
            <span className="cursor-pointer underline">
              {sessionData.user?.name}
            </span>{" "}
            welcome to <span className="text-yellow-300">HearMe</span>
          </div>
        )}
        <AuthShowcase userID={userID} />
      </main>
    </>
  );
};

interface AuthShowcaseProps {
  userID?: string;
}

export const AuthShowcase: React.FC<AuthShowcaseProps> = ({ userID }) => {
  const { data: sessionData } = useSession();
  console.log(sessionData);
  console.log(userID);

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      {sessionData && <div>{/* Content to show when authenticated */}</div>}
      <button
        className="mt-10 rounded-full bg-white px-10 py-3 font-mono font-semibold text-black no-underline transition hover:bg-white/50"
        onClick={
          sessionData ? () => void signOut() : () => void signIn("spotify")
        }
      >
        {sessionData ? "Sign out" : "Sign in via Spotify"}
      </button>
    </div>
  );
};

export default Home;
